"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.equalBytes = exports.bytesToBase64 = exports.hexToBytes = exports.bytesToHex = exports.getRandomValues = void 0;
const secp = __importStar(require("@noble/secp256k1"));
const encryption_1 = require("./encryption");
function getRandomValues(array) {
    return encryption_1.crypto.getRandomValues(array);
}
exports.getRandomValues = getRandomValues;
exports.bytesToHex = secp.utils.bytesToHex;
function hexToBytes(s) {
    if (s.startsWith('0x')) {
        s = s.slice(2);
    }
    const bytes = new Uint8Array(s.length / 2);
    for (let i = 0; i < bytes.length; i++) {
        const j = i * 2;
        bytes[i] = Number.parseInt(s.slice(j, j + 2), 16);
    }
    return bytes;
}
exports.hexToBytes = hexToBytes;
function bytesToBase64(bytes) {
    return Buffer.from(bytes).toString('base64');
}
exports.bytesToBase64 = bytesToBase64;
function equalBytes(b1, b2) {
    if (b1.length !== b2.length) {
        return false;
    }
    for (let i = 0; i < b1.length; i++) {
        if (b1[i] !== b2[i]) {
            return false;
        }
    }
    return true;
}
exports.equalBytes = equalBytes;
//# sourceMappingURL=utils.js.map