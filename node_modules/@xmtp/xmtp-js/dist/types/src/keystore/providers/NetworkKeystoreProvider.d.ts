import { Signer } from './../../types/Signer';
import ApiClient from '../../ApiClient';
import { KeystoreProvider, KeystoreProviderOptions } from './interfaces';
import { Keystore } from '../interfaces';
/**
 * NetworkKeystoreProvider will look on the XMTP network for an `EncryptedPrivateKeyBundle`
 * on the user's private storage topic. If found, will decrypt the bundle using a wallet
 * signature and instantiate a Keystore instance using the decrypted value.
 */
export default class NetworkKeystoreProvider implements KeystoreProvider {
    newKeystore(opts: KeystoreProviderOptions, apiClient: ApiClient, wallet?: Signer): Promise<Keystore>;
}
