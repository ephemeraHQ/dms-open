import { ciphertext } from '@xmtp/proto';
import { PrivateKey, SignedPrivateKey } from './PrivateKey';
import { PublicKey, SignedPublicKey } from './PublicKey';
import Signature from './Signature';
export default class SignedEciesCiphertext implements ciphertext.SignedEciesCiphertext {
    eciesBytes: Uint8Array;
    signature: Signature;
    ciphertext: ciphertext.SignedEciesCiphertext_Ecies;
    constructor({ eciesBytes, signature }: ciphertext.SignedEciesCiphertext);
    toBytes(): Uint8Array;
    verify(pubKey: PublicKey | SignedPublicKey): Promise<boolean>;
    static fromBytes(data: Uint8Array): SignedEciesCiphertext;
    static create(ecies: ciphertext.SignedEciesCiphertext_Ecies, signer: PrivateKey | SignedPrivateKey): Promise<SignedEciesCiphertext>;
}
