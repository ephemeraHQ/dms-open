import { content as proto } from '@xmtp/proto';
export declare class ContentTypeId {
    authorityId: string;
    typeId: string;
    versionMajor: number;
    versionMinor: number;
    constructor(obj: proto.ContentTypeId);
    toString(): string;
    sameAs(id: ContentTypeId): boolean;
}
export interface EncodedContent {
    type: ContentTypeId;
    parameters: Record<string, string>;
    fallback?: string;
    compression?: number;
    content: Uint8Array;
}
export interface CodecRegistry {
    codecFor(contentType: ContentTypeId): ContentCodec<any> | undefined;
}
export interface ContentCodec<T> {
    contentType: ContentTypeId;
    encode(content: T, registry: CodecRegistry): EncodedContent;
    decode(content: EncodedContent, registry: CodecRegistry): T;
}
export declare const ContentTypeFallback: ContentTypeId;
