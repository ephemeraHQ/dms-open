import BackupClient, { BackupConfiguration, SelectBackupProvider } from './BackupClient';
/**
 * Creates a backup client of the correct provider type (e.g. xmtp backup, no backup, etc).
 * Uses an existing user preference from the backend if it exists, else prompts for a new
 * one using the `providerSelector`
 *
 * @param walletAddress The public address of the user's wallet
 * @param selectBackupProvider A callback for determining the provider to use, in the event there is no
 * existing user preference. The app can define the policy to use here (e.g. prompt the user,
 * or default to a certain provider type).
 * @returns A backup client of the correct type
 */
export declare function createBackupClient(walletAddress: string, selectBackupProvider: SelectBackupProvider): Promise<BackupClient>;
export declare function fetchOrCreateConfiguration(walletAddress: string, selectBackupProvider: SelectBackupProvider): Promise<BackupConfiguration>;
